title: Transpose a matrix
tags:
    - zip
    - matrices
level: 4
prompt: |-
    Question:
    Write a function called `transpose_matrix` that takes a matrix represented as a list of lists and returns the transposed matrix. Use `zip` to transpose the matrix.

    Example:
    Input: [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
    Output: [[1, 4, 7], [2, 5, 8], [3, 6, 9]]
starter: |-
    def transpose_matrix(matrix):
        """
        Transposes a matrix represented as a list of lists.

        Args:
            matrix (list): The input matrix.

        Returns:
            list: The transposed matrix.
        """
        # TODO: Implement the transpose_matrix function
        pass
solution: |-
    def transpose_matrix(matrix):
        return [list(row) for row in zip(*matrix)]
tests: |-
    def test_transpose_matrix():
        assert transpose_matrix([[1, 2, 3], [4, 5, 6], [7, 8, 9]]) == [[1, 4, 7], [2, 5, 8], [3, 6, 9]]
        assert transpose_matrix([[1, 2], [3, 4], [5, 6]]) == [[1, 3, 5], [2, 4, 6]]
        assert transpose_matrix([[1]]) == [[1]]
        assert transpose_matrix([]) == []
        print("All test cases pass")
