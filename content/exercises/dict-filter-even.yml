title: Filter a dictionary to include only the key-value pairs where the value is an even number
tags:
    - comprehension
    - dictionaries
level: 3
prompt: |-
    Question:
    Write a function called `filter_even_values` that takes a dictionary as input and returns a new dictionary containing only the key-value pairs where the value is an even number. Use dictionary comprehension to create the new dictionary.

    Example:
    Input: {"a": 2, "b": 3, "c": 4, "d": 5}
    Output: {"a": 2, "c": 4}
starter: |-
    def filter_even_values(dictionary):
        """
        Filters a dictionary to include only the key-value pairs where the value is an even number.

        Args:
        dictionary (dict): The input dictionary.

        Returns:
        dict: A new dictionary with the filtered key-value pairs.
        """
        # TODO: Implement the filter_even_values function
        pass
solution: |-
    def filter_even_values(dictionary):
        return {key: value for key, value in dictionary.items() if value % 2 == 0}
tests: |-
    def test_filter_even_values():
        assert filter_even_values({"a": 2, "b": 3, "c": 4, "d": 5}) == {"a": 2, "c": 4}
        assert filter_even_values({"x": 0, "y": 1, "z": 2}) == {"x": 0, "z": 2}
        assert filter_even_values({}) == {}
        assert filter_even_values({"p": 5, "q": 6, "r": 7}) == {"q": 6}
