slug: calculate-sum-tree
title: Calculate the sum of all the numbers in a tree structure
tags:
    - recursion
level: 4
prompt: |-
    Question:
    Write a function called calculate_sum_tree that takes a tree structure as input and calculates the sum of all the numbers in the tree. The tree structure is represented as nested lists, where each list can contain either numbers or nested lists. The function should return the calculated sum.

    Example:
    Input: [1, [2, [3, 4], 5], 6]
    Output: 21
starter: |-
    def calculate_sum_tree(tree):
        """
        Calculates the sum of all the numbers in a tree structure.

        Args:
        tree (list): The input tree structure.

        Returns:
        int: The calculated sum.
        """
        # TODO: Implement the calculate_sum_tree function
        pass
solution: |-
    def calculate_sum_tree(tree):
        if isinstance(tree, int):
            return tree
        else:
            return sum(calculate_sum_tree(subtree) for subtree in tree)
tests: |-
    def test_calculate_sum_tree():
        assert calculate_sum_tree([1, [2, [3, 4], 5], 6]) == 21
        assert calculate_sum_tree([10, [20, [30, 40], 50], 60]) == 210
        assert calculate_sum_tree([0, [0, [0, 0], 0], 0]) == 0
        assert calculate_sum_tree([1, [2, [3, [4, [5, [6, [7, [8, [9]]]]]]]]]) == 45
        print("All test cases pass")
