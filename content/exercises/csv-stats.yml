title: Calculate Statistics from CSV File
tags:
  - files
  - CSV
  - statistics
level: 3
prompt: |-
  Question:
  Write a function called `calculate_statistics` that takes a file path as input and returns a dictionary containing the statistics calculated from the numeric data in the CSV file. The function should read the CSV file, extract the numeric data, and calculate the mean, median, and standard deviation of each numeric column.

  Example:
  Input: "data.csv"
  Output: {"Column1": {"mean": 10.5, "median": 10.0, "std_dev": 2.5}, "Column2": {"mean": 20.0, "median": 20.0, "std_dev": 0.0}}

starter: |-
  import csv
  import statistics

  def calculate_statistics(file_path):
    """
    Calculates statistics from numeric data in a CSV file.

    Args:
      file_path (str): The path to the CSV file.

    Returns:
      dict: A dictionary containing the statistics for each numeric column.
    """
    # TODO: Implement the calculate_statistics function
    pass

solution: |-
  import csv
  import statistics

  def calculate_statistics(file_path):
      statistics_data = {}
      with open(file_path, 'r') as file:
          reader = csv.DictReader(file)
          for row in reader:
              for column, value in row.items():
                  if column not in statistics_data:
                      statistics_data[column] = []
                  try:
                      statistics_data[column].append(float(value))
                  except ValueError:
                      pass

      result = {}
      for column, data in statistics_data.items():
          result[column] = {
              "mean": statistics.mean(data),
              "median": statistics.median(data),
              "std_dev": statistics.stdev(data) if len(data) > 1 else 0.0
          }
      return result

tests: |-
  def test_calculate_statistics(tmp_path):
    file_path = tmp_path / "data.csv"
    with open(file_path, "w", newline="") as file:
        writer = csv.writer(file)
        writer.writerow(["Column1", "Column2"])
        writer.writerow([10, 20])
        writer.writerow([11, 20])
        writer.writerow([12, 20])
        writer.writerow([9, 20])

    statistics = calculate_statistics(file_path)
    assert statistics == {"Column1": {"mean": 10.5, "median": 10.5, "std_dev": 1.118033988749895}, "Column2": {"mean": 20.0, "median": 20.0, "std_dev": 0.0}}
    print("All test cases pass")
