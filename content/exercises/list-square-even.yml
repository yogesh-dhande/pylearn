title: Square the even numbers in a list
tags:
    - comprehension
    - lists
level: 3
prompt: |-
    Question:
    Write a function called `square_even_numbers` that takes a list of integers as input and returns a new list containing the squares of the even numbers in the input list. Use list comprehension to create the new list.

    Example:
    Input: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
    Output: [4, 16, 36, 64, 100]
starter: |-
    def square_even_numbers(numbers):
        """
        Creates a new list containing the squares of the even numbers in the input list.

        Args:
            numbers (list): The input list of integers.

        Returns:
            list: A new list with the squared even numbers.
        """
        # TODO: Implement the square_even_numbers function
        pass
solution: |-
    def square_even_numbers(numbers):
        return [num ** 2 for num in numbers if num % 2 == 0]
tests: |-
    def test_square_even_numbers():
        assert square_even_numbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) == [4, 16, 36, 64, 100]
        assert square_even_numbers([2, 4, 6, 8, 10]) == [4, 16, 36, 64, 100]
        assert square_even_numbers([1, 3, 5, 7, 9]) == []
        assert square_even_numbers([]) == []
        print("All test cases pass")
