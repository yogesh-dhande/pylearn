title: Validate a password
tags:
    - regex
    - strings
level: 4
prompt: |-
    Question:
    Write a function called `validate_password` that takes a string as input and returns `True` if the input string is a valid password, and `False` otherwise. A valid password must satisfy the following criteria:
    - At least 8 characters long
    - Contains at least one uppercase letter
    - Contains at least one lowercase letter
    - Contains at least one digit
    - Contains at least one special character from the set: !@#$%^&*

    Use regular expressions (regex) to validate the password.

    Example:
    Input: "Passw0rd!"
    Output: True
starter: |-
    import re

    def validate_password(password):
        """
        Validates a password based on certain criteria using regex.

        Args:
            password (str): The input password.

        Returns:
            bool: True if the password is valid, False otherwise.
        """
        # TODO: Implement the validate_password function
        pass
solution: |-
    import re

    def validate_password(password):
        pattern = r"^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[!@#$%^&*]).{8,}$"
        return bool(re.match(pattern, password))
tests: |-
    def test_validate_password():
        assert validate_password("Passw0rd!") == True
        assert validate_password("password123") == False
        assert validate_password("P@ssw0rd") == True
        assert validate_password("12345678") == False
        assert validate_password("!@#$%^&*") == False
