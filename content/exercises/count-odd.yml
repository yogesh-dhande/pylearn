title: Count the number of odd numbers in a given list
tags:
    - loops
level: 2
prompt: |-
    Question:
    Write a function called `count_odd_numbers` that takes a list of integers as input and returns the count of odd numbers in the list. Use a while loop to iterate through each element in the list and count the number of odd numbers.

    Example:
    Input: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
    Output: 5
starter: |-
    def count_odd_numbers(numbers):
        """
        Counts the number of odd numbers in a given list.

        Args:
            numbers (list): The input list of integers.

        Returns:
            int: The count of odd numbers in the list.
        """
        # TODO: Implement the count_odd_numbers function
        pass
solution: |-
    def count_odd_numbers(numbers):
        count = 0
        index = 0
        while index < len(numbers):
            if numbers[index] % 2 != 0:
                count += 1
            index += 1
        return count
tests: |-
    def test_count_odd_numbers():
        assert count_odd_numbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) == 5
        assert count_odd_numbers([2, 4, 6, 8, 10]) == 0
        assert count_odd_numbers([1, 3, 5, 7, 9]) == 5
        assert count_odd_numbers([]) == 0
        print("All test cases pass")
