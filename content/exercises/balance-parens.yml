slug: balanced-function
title: Check for balanced parentheses, brackets, and braces
tags:
    - strings
level: 4
prompt: |-
    Question:
    Write a function called balanced that takes a string `s` as input. The function should return `True` if the string contains only balanced parentheses, brackets, and braces (i.e., `()`, `[]`, `{}`), otherwise it should return `False`.

    Example:
    Input: balanced("({[]})")
    Output: True
starter: |-
    def balanced(s):
        """
        Checks if the string contains only balanced parentheses, brackets, and braces.

        Args:
        s: The input string.

        Returns:
        bool: True if the string is balanced, False otherwise.
        """
        # TODO: Implement the balanced function
        pass
solution: |-
    def balanced(s):
        stack = []
        opening = '({['
        closing = ')}]'
        for char in s:
            if char in opening:
                stack.append(char)
            elif char in closing:
                if not stack or opening.index(stack.pop()) != closing.index(char):
                    return False
        return len(stack) == 0
tests: |-
    def test_balanced():
        assert balanced("({[]})") == True
        assert balanced("(([{()}]))") == True
        assert balanced("({[}])") == False
        assert balanced("()[]{}") == True
        assert balanced("(((") == False
        assert balanced(")))") == False
        assert balanced("({[})") == False
        assert balanced("") == True
        print("All test cases pass")
