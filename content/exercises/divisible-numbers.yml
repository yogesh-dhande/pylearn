title: Find numbers that are divisible by 3 but not a multiple of 7
tags:
    - loops
level: 2
prompt: |-
    Question:
    Write a function called divisible_numbers that takes a list of numbers as input and returns a comma-separated sequence of numbers that are divisible by 3 but not a multiple of 7. The numbers should be between 2000 and 3200 (both inclusive).

    Example:
    Input: [2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009]
    Output: "2001,2004"
starter: |-
    def divisible_numbers(numbers):
        """
        Returns a comma-separated sequence of numbers that are divisible by 3 but not a multiple of 7.

        Args:
        numbers (list): The list of numbers.

        Returns:
        str: The comma-separated sequence of numbers.
        """
        # TODO: Implement the divisible_numbers function
        pass
solution: |-
    def divisible_numbers(numbers):
        result = []
        for num in numbers:
            if (num % 3 == 0) and (num % 7 != 0):
                result.append(str(num))
        return ','.join(result)
tests: |-
    def test_divisible_numbers():
        assert divisible_numbers([2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009]) == "2001,2004,2007"
        assert divisible_numbers([2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019]) == "2010,2013,2019"
        assert divisible_numbers([2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029]) == "2022,2025,2028"
        assert divisible_numbers([2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039]) == "2031,2034"
        assert divisible_numbers([]) == ""
